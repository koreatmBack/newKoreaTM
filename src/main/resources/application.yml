server:
  port: 8080
#  address: 127.0.0.1
  address: 0.0.0.0
spring:
  profiles.active: "local"
  config:
    import: "optional:classpath:application-secret.yml"
  timezone: Asia/Seoul
  main:
    web-application-type: servlet
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB
  datasource:
    dialect: org.hibernate.dialect.MariaDB103Dialect
    driver-class-name: org.mariadb.jdbc.Driver
#    url: jdbc:mariadb://localhost:3306/sys
#    username: root
    url: jdbc:mariadb://koti-springboot2-webservice.csampsip3gfh.ap-northeast-2.rds.amazonaws.com:3306/formmail
    password: ${DB_PW}
    username: ${DB_NAME}
    sql-script-encoding: "UTF-8"
  jpa:
    properties:
      hibernate:
        "[format_sql]": true # 정렬된 SQL 출력
        "[auto_quote_keyword]": true
        show-sql: true # 사용되는 SQL 콘솔창에 출력
    hibernate:
      ddl-auto: none # 객체에 매핑되는 기존 테이블 자동 드랍 및 새로운 테이블 생성, create, none, create-drop
      defer-datasource-initialization: true
      mybatis:
        type-aliases-package: com.example.smsSpringTest.model.*
        configuration:
          map-underscore-to-camel-case: true
          default-executor-type: reuse
  redis:
    host: localhost
    port: 6379
  mail:
    host: smtp.naver.com
    port: 465
    username: ${EMAIL_NAME}
    password: ${EMAIL_PWD}
    properties:
      mail:
        protocol: smtps
        smtp:
          starttls:
            enable: true
            required: true
          auth: true
          ssl:
            enable: true
            trust: smtp.naver.com
          connectiontimeout: 10000
          timeout: 10000
          writerimeout: 10000
mybatis:
  type-aliases-package: com.example.smsSpringTest.model.*
  configuration:
    map-underscore-to-camel-case: true
    default-executor-type: reuse

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    s3:
      bucket: api-echo-bucket
    region:
      static: ap-northeast-2
    stack:
      auto: false
sms:
  userId: ${SMS_ID}
  secureKey: ${SMS_SECURE}

holiday:
  service-key: ${HOLIDAY_KEY}

jwt:
  secret: ${JWT_SECRET}

kakao:
  client-id: ${KAKAO_CLIENT_ID}
  client-secret: ${KAKAO_CLIENT_SECRET}
#  redirect-uri: http://localhost:5173/kakao-login
  redirect-uri: https://goalba.co.kr/kakao-login
#  redirect-uri: http://localhost:8080/v1/jobsite/user/login/kakao

naver:
  client-id: ${NAVER_CLIENT_ID}
  client-secret: ${NAVER_CLIENT_SECRET}
#  redirect-uri: http://localhost:5173/naver-login
  redirect-uri: https://goalba.co.kr/naver-login
#  redirect-uri: https://d1hw28kg3ibv9b.cloudfront.net/v1/jobsite/user/login/naver
#  redirect-uri: http://localhost:8080/v1/jobsite/user/login/naver
  map:
   client-id: ${NAVER_MAP_CLIENT_ID}
   client-secret: ${NAVER_MAP_CLIENT_SECRET}
  search:
    client-id: ${NAVER_SEARCH_CLIENT_ID}
    client-secret: ${NAVER_SEARCH_CLIENT_SECRET}
google:
  client-id: ${GOOGLE_CLIENT_ID}
  client-secret: ${GOOGLE_CLIENT_SECRET}
#  redirect-uri: http://localhost:5173/google-login
  redirect-uri: https://goalba.co.kr/google-login
#  redirect-uri: http://localhost:8080/v1/jobsite/user/login/google

facebook:
  client-id: ${FACEBOOK_CLIENT_ID}
  client-secret: ${FACEBOOK_CLIENT_SECRET}
#  redirect-uri: http://localhost:5173/facebook-login
  redirect-uri: https://goalba.co.kr/facebook-login

biz:
  auth-code: ${BIZ_AUTH_CODE}
  auth-token: ${BIZ_AUTH_TOKEN}
  client-id: ${BIZ_CLIENT_ID}


logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error
